[{"content":"聯絡資訊 Gmail: allenhu1029@gmail.com\nGithub\nFacebook\nTelegram\n學歷 大學   本系：交通大學資訊管理與財務金融學系資訊管理組\n  雙主修：交通大學資訊工程學系資訊工程組\n  高中  台北市立成功高級中學  語言 英文  托福 iBT： 106 (2021) 雅思 IELTS：7.0 (2018) 多益 TOEIC：910 (2017) 全民 GEPT：中高級 (2012)  日文  日檢 JLPT：N2 (2019)  興趣 創意發想 解決問題，用最少的力氣完成最多事情。\n鋼琴 最喜歡的曲子：Chopin Ballade 1\n音遊  Dynamix：全曲 X Arcaea：PTT 12.0  動畫/漫畫  漫畫首推：龍馬的雅號、魂環 動畫首推：搖曳露營  運動 打桌球\n程式  主寫：Flutter 略懂：C/C++、Kotlin、Python、HTML、CSS、JS 正在學習：Learning、Fuzzing  ","permalink":"https://yagami.dev/about/","summary":"聯絡資訊 Gmail: allenhu1029@gmail.com\nGithub\nFacebook\nTelegram\n學歷 大學   本系：交通大學資訊管理與財務金融學系資訊管理組\n  雙主修：交通大學資訊工程學系資訊工程組\n  高中  台北市立成功高級中學  語言 英文  托福 iBT： 106 (2021) 雅思 IELTS：7.0 (2018) 多益 TOEIC：910 (2017) 全民 GEPT：中高級 (2012)  日文  日檢 JLPT：N2 (2019)  興趣 創意發想 解決問題，用最少的力氣完成最多事情。\n鋼琴 最喜歡的曲子：Chopin Ballade 1\n音遊  Dynamix：全曲 X Arcaea：PTT 12.0  動畫/漫畫  漫畫首推：龍馬的雅號、魂環 動畫首推：搖曳露營  運動 打桌球\n程式  主寫：Flutter 略懂：C/C++、Kotlin、Python、HTML、CSS、JS 正在學習：Learning、Fuzzing  ","title":"關於我"},{"content":"所以說，我以後絕對不做資料分析師。\n前情提要 這學期 R 語言期末 Project 本來想做「清交二手拍盤子價與市場價格差距比例和被噴的次數是否程正相關」，但由於實在是懶得用一個不習慣的語言寫抓 Facebook 留言 + 爬市場價格的 code，最後還是放棄了。\n去了政府的 開放資料網站 逛了逛資料集，各校退學人數 吸引了我的注意。\n剛好前不久遇到了台大5天3自殺的案件，想到常在 Facebook 上看到文章談論頂大學生壓力大的問題，於是決定用退學資料做分析。\n定義問題 在做資料分析時，非常重要的一點是定義問題。\n這邊問題倒是很明確，我會如此定義：「學校 QS 排名與退學人數是否有相關性」\n這裡最大的問題是，退學人數與壓力大倒也不是直接相關。或許有些人因為不想退學，因此加倍努力導致壓力更大。於是索性直接做排名跟退學人數的相關性了 XD\n分析過程 Pre-Process load 需要用到的 package\nlibrary(ggplot2) library(dplyr) 整理學校排名的 data.frame\n# School Ranking ranked_schools \u0026lt;- read.csv(\u0026quot;ranking.csv\u0026quot;) ranked_schools_process \u0026lt;- function(ranked_schools) { # format rank number ranked_schools[\u0026quot;rank\u0026quot;] \u0026lt;- lapply(ranked_schools[\u0026quot;rank\u0026quot;], function(x) as.numeric((regmatches(x,regexpr(\u0026quot;[0-9]*$\u0026quot;, x))))) # format school name ranked_schools[\u0026quot;title\u0026quot;] \u0026lt;- c(\u0026quot;國立臺灣大學\u0026quot;, \u0026quot;國立清華大學\u0026quot;, \u0026quot;國立成功大學\u0026quot;, \u0026quot;國立交通大學\u0026quot;, \u0026quot;國立臺灣科技大學\u0026quot;, \u0026quot;國立陽明大學\u0026quot;, \u0026quot;國立臺灣師範大學\u0026quot;, \u0026quot;臺北醫學大學\u0026quot;, \u0026quot;國立中山大學\u0026quot;, \u0026quot;國立中央大學\u0026quot;, \u0026quot;國立臺北科技大學\u0026quot;, \u0026quot;長庚大學\u0026quot;, \u0026quot;國立政治大學\u0026quot;, \u0026quot;國立中興大學\u0026quot;, \u0026quot;高雄醫學大學\u0026quot;, \u0026quot;國立中正大學\u0026quot;) # remove unused column ranked_schools[\u0026quot;detailPage\u0026quot;] \u0026lt;- NULL ranked_schools } # pre-process ranked_schools ranked_schools \u0026lt;- ranked_schools_process(ranked_schools) 整理退學資料：\n 刪掉沒有資料的 column 20 跟 21 把 string 轉成 numeric 把 退學人數小計 加到 在學學生數 裡面，因為 在學學生數 是不包含 退學人數小計 中已經退學的人數，導致之後在算退學 % 數時會有除以 0 的情況 做完 3 之後如果 在學學生數 還是 0 就把這個沒用的資料拿掉  # Suspend suspend \u0026lt;- read.csv(\u0026quot;suspend.csv\u0026quot;) suspend_process \u0026lt;- function(suspend) { # remove column 20~21 with no data suspend[20:21] \u0026lt;- NULL # change column 10~20 to numeric suspend[10:20] \u0026lt;- lapply(suspend[10:20], function(x) as.numeric(x)) # change column 9 to numeric suspend[9] \u0026lt;- lapply(suspend[9], function(x) as.numeric(sub(\u0026quot;,\u0026quot;, \u0026quot;\u0026quot;, x, fixed = TRUE))) # add column 10 to column 9 suspend[, 9] \u0026lt;- suspend[, 9] + suspend[, 10] suspend.raw \u0026lt;- suspend # remove if column 9 is still 0 after adding column 10 suspend \u0026lt;- suspend[suspend$在學學生數 != 0, ] suspend } Utilities 接著定義一些協助我們篩選跟處理資料的 function\n首先是 suspend_filter()，用來篩選資料：\nsuspend_filter \u0026lt;- function(suspend, restriction) { if(restriction == \u0026quot;college\u0026quot;) suspend \u0026lt;- suspend[suspend$學校類別 == \u0026quot;一般大學\u0026quot;, ] else if(restriction == \u0026quot;tech\u0026quot;) suspend \u0026lt;- suspend[suspend$學校類別 == \u0026quot;技專校院\u0026quot;, ] else if(restriction == \u0026quot;ranked\u0026quot;) suspend \u0026lt;- suspend[suspend$學校名稱 %in% ranked_schools$title, ] else if(restriction == \u0026quot;unranked\u0026quot;) suspend \u0026lt;- suspend[!(suspend$學校名稱 %in% ranked_schools$title), ] else if(restriction == \u0026quot;bachelor\u0026quot;) suspend \u0026lt;- suspend[grepl(\u0026quot;學士\u0026quot;, suspend$學制班別, fixed = TRUE), ] else if(restriction == \u0026quot;master\u0026quot;) suspend \u0026lt;- suspend[grepl(\u0026quot;碩士\u0026quot;, suspend$學制班別, fixed = TRUE), ] else if(restriction == \u0026quot;phd\u0026quot;) suspend \u0026lt;- suspend[grepl(\u0026quot;博士\u0026quot;, suspend$學制班別, fixed = TRUE), ] else if(restriction == \u0026quot;day\u0026quot;) suspend \u0026lt;- suspend[grepl(\u0026quot;日間\u0026quot;, suspend$學制班別, fixed = TRUE), ] else if(restriction == \u0026quot;night\u0026quot;) suspend \u0026lt;- suspend[grepl(\u0026quot;進修\u0026quot;, suspend$學制班別, fixed = TRUE), ] else if(restriction == \u0026quot;public\u0026quot;) suspend \u0026lt;- suspend[suspend$設立別 == \u0026quot;公立\u0026quot;, ] else if(restriction == \u0026quot;private\u0026quot;) suspend \u0026lt;- suspend[suspend$設立別 == \u0026quot;私立\u0026quot;, ] suspend } 這樣用 dlpyr 的 %\u0026gt;% (pipe) 運算子我們就能很方便地做多條件篩選。比如我們想篩選出 一般大學 -\u0026gt; 學士班 -\u0026gt; 日間部，我們就可以用以下寫法：\nselected \u0026lt;- suspend %\u0026gt;% suspend_filter(\u0026quot;college\u0026quot;) %\u0026gt;% suspend_filter(\u0026quot;bachelor\u0026quot;) %\u0026gt;% suspend_filter(\u0026quot;day\u0026quot;) 接著是 suspend_clean()，用來把資料刪到剩下做圖需要的欄位、計算退學百分比與合併男女。\nsuspend_clean \u0026lt;- function(suspend, target, merge_gender) { if(missing(merge_gender)) merge_gender = FALSE # clean up data if(merge_gender) { suspend \u0026lt;- suspend %\u0026gt;% group_by(學校名稱) %\u0026gt;% summarise(total = sum(在學學生數), target = sum(eval(as.name(target)))) suspend$name \u0026lt;- suspend$學校名稱 suspend$學校名稱 \u0026lt;- NULL } else { tmp \u0026lt;- suspend suspend \u0026lt;- NULL suspend \u0026lt;- data.frame( \u0026quot;name\u0026quot; = tmp$學校名稱, \u0026quot;target\u0026quot; = as.vector(tmp[[target]]), \u0026quot;total\u0026quot; = tmp$在學學生數 ) } # calculate percentage of suspension suspend$rate \u0026lt;- suspend$target / suspend$total suspend } Visualization 接著就可以開始畫圖了。\n QS 排名與退學率之關係  篩選資料：「前段班」\nselected \u0026lt;- suspend %\u0026gt;% suspend_filter(\u0026quot;ranked\u0026quot;) %\u0026gt;% suspend_clean(\u0026quot;退學人數小計\u0026quot;) selected \u0026lt;- selected[order(match(selected$name, ranked_schools$title)), ] selected$rank \u0026lt;- ranked_schools$rank 繪製散佈圖\nggplot(selected, aes(rank, rate)) + geom_jitter() 這樣好像看不太出什麼趨勢。\n做個 Regression 試試好了：\nggplot(selected, aes(rank, rate)) + geom_jitter() + geom_smooth(method = \u0026quot;lm\u0026quot;) 好像有個趨勢，但不對，不是應該排名比較前面壓力比較大 -\u0026gt; 退學率比較高嗎？\n因為台清交成有許多在職專班，壓力比較小？\n大學部  篩選資料：\n 「前段班」 大學部  selected \u0026lt;- suspend %\u0026gt;% suspend_filter(\u0026quot;ranked\u0026quot;) %\u0026gt;% suspend_filter(\u0026quot;bachelor\u0026quot;) %\u0026gt;% suspend_clean(\u0026quot;退學人數小計\u0026quot;) selected \u0026lt;- selected[order(match(selected$name, ranked_schools$title)), ] selected$rank \u0026lt;- ranked_schools$rank ggplot(selected, aes(rank, rate)) + geom_jitter() + geom_smooth(method = \u0026quot;lm\u0026quot;) 太棒了，趨勢正在消失。\n我們再把範圍縮小到只有日間部的學生試試。\n日間部  篩選資料：\n 「前段班」 大學部 日間部  selected \u0026lt;- suspend %\u0026gt;% suspend_filter(\u0026quot;ranked\u0026quot;) %\u0026gt;% suspend_filter(\u0026quot;bachelor\u0026quot;) %\u0026gt;% suspend_filter(\u0026quot;day\u0026quot;) %\u0026gt;% suspend_clean(\u0026quot;退學人數小計\u0026quot;) selected \u0026lt;- selected[order(match(selected$name, ranked_schools$title)), ] selected$rank \u0026lt;- ranked_schools$rank 這樣看下來，幾乎沒有趨勢了。學校排名根本與退學率無關，什麼台大學生壓力大都是假的。\n我們不妨換個角度看看：退學原因。\n因為學業成績而退學的人  篩選資料：\n 「前段班」 大學部  這次我們從「退學人數小計」改為觀察「因學業成績退學人數」。\nselected \u0026lt;- suspend %\u0026gt;% suspend_filter(\u0026quot;ranked\u0026quot;) %\u0026gt;% suspend_filter(\u0026quot;bachelor\u0026quot;) %\u0026gt;% suspend_clean(\u0026quot;因學業成績退學人數\u0026quot;) selected \u0026lt;- selected[order(match(selected$name, ranked_schools$title)), ] selected$rank \u0026lt;- ranked_schools$rank ggplot(selected, aes(rank, rate)) + geom_jitter() + geom_smooth(method = \u0026quot;lm\u0026quot;) 可以觀察到，雖然有下降的趨勢，但仍然非常不明顯。而關鍵的台大也不太符合趨勢。\n退學原因比例  selected \u0026lt;- suspend selected$type \u0026lt;- selected$學校名稱 %in% ranked_schools$title selected$type \u0026lt;- lapply(selected$type, function(x) { if(x) \u0026quot;ranked\u0026quot; else \u0026quot;unranked\u0026quot; }) selected \u0026lt;- selected %\u0026gt;% group_by(type) %\u0026gt;% summarise_at(11:20, sum) selected \u0026lt;- as.data.frame(selected) selected \u0026lt;- data.frame( \u0026quot;type\u0026quot; = rep(c(\u0026quot;ranked\u0026quot;, \u0026quot;unranked\u0026quot;), each = 10), \u0026quot;reason\u0026quot; = rep(unlist(dimnames(selected)[2], use.names = FALSE)[2:11], times = 2), \u0026quot;count\u0026quot; = c(unlist(selected[1, 2:11], use.names = FALSE), unlist(selected[2, 2:11], use.names = FALSE)) ) selected \u0026lt;- selected[selected$type == \u0026quot;ranked\u0026quot;, ] ggplot(selected, aes(x=\u0026quot;\u0026quot;, y = count, fill = reason)) + geom_bar(width = 1, stat = \u0026quot;identity\u0026quot;) + coord_polar(\u0026quot;y\u0026quot;, start=0) + theme(text=element_text(family = \u0026quot;黑體-繁 中黑\u0026quot;, size = 12)) 有 QS 排名 vs 沒 QS 排名  selected \u0026lt;- suspend selected$type \u0026lt;- selected$學校名稱 %in% ranked_schools$title selected$type \u0026lt;- lapply(selected$type, function(x) { if(x) \u0026quot;ranked\u0026quot; else \u0026quot;unranked\u0026quot; }) selected \u0026lt;- selected %\u0026gt;% group_by(type) %\u0026gt;% summarise_at(11:20, sum) selected \u0026lt;- as.data.frame(selected) selected \u0026lt;- data.frame( \u0026quot;type\u0026quot; = rep(c(\u0026quot;ranked\u0026quot;, \u0026quot;unranked\u0026quot;), each = 10), \u0026quot;reason\u0026quot; = rep(unlist(dimnames(selected)[2], use.names = FALSE)[2:11], times = 2), \u0026quot;count\u0026quot; = c(unlist(selected[1, 2:11], use.names = FALSE), unlist(selected[2, 2:11], use.names = FALSE)) ) ggplot(selected, aes(x = type, y = count, fill = reason)) + geom_bar(stat = \u0026quot;identity\u0026quot;, position = \u0026quot;fill\u0026quot;) + theme(text=element_text(family = \u0026quot;黑體-繁 中黑\u0026quot;, size = 12)) 結論 我認為結果不明顯有以下三個原因：\n 樣本大小  由於上 QS 排名的台灣大學也就16間，或許由於樣本數太少，無法觀察到明顯趨勢。\n校園風氣  雖然壓力大有可能導致退學，但或許有些學生會因同儕競爭關係，硬撐著不退學，導致在壓力大的環境下仍然持續就學。白話來說，或許壓力大跟退學沒什麼關係。\n確實無關  或許退學率與 QS 排名確實無關。\n後記 上了大學有幾次做資料分析的機會。多數是在為 Deep Learning 做資料前處理，很少有像這樣單純把資料視覺化後找出關係的機會。\n我一直都很討厭不明確的事情。資料分析就是如此，雖然確實會定義一個問題並從資料中找出相關規律，但尋找規律的過程幾乎是漫無目的的。\n所以說，我以後絕對不做資料分析師。\n","permalink":"https://yagami.dev/posts/2_why_not_data_analyst/","summary":"所以說，我以後絕對不做資料分析師。\n前情提要 這學期 R 語言期末 Project 本來想做「清交二手拍盤子價與市場價格差距比例和被噴的次數是否程正相關」，但由於實在是懶得用一個不習慣的語言寫抓 Facebook 留言 + 爬市場價格的 code，最後還是放棄了。\n去了政府的 開放資料網站 逛了逛資料集，各校退學人數 吸引了我的注意。\n剛好前不久遇到了台大5天3自殺的案件，想到常在 Facebook 上看到文章談論頂大學生壓力大的問題，於是決定用退學資料做分析。\n定義問題 在做資料分析時，非常重要的一點是定義問題。\n這邊問題倒是很明確，我會如此定義：「學校 QS 排名與退學人數是否有相關性」\n這裡最大的問題是，退學人數與壓力大倒也不是直接相關。或許有些人因為不想退學，因此加倍努力導致壓力更大。於是索性直接做排名跟退學人數的相關性了 XD\n分析過程 Pre-Process load 需要用到的 package\nlibrary(ggplot2) library(dplyr) 整理學校排名的 data.frame\n# School Ranking ranked_schools \u0026lt;- read.csv(\u0026quot;ranking.csv\u0026quot;) ranked_schools_process \u0026lt;- function(ranked_schools) { # format rank number ranked_schools[\u0026quot;rank\u0026quot;] \u0026lt;- lapply(ranked_schools[\u0026quot;rank\u0026quot;], function(x) as.numeric((regmatches(x,regexpr(\u0026quot;[0-9]*$\u0026quot;, x))))) # format school name ranked_schools[\u0026quot;title\u0026quot;] \u0026lt;- c(\u0026quot;國立臺灣大學\u0026quot;, \u0026quot;國立清華大學\u0026quot;, \u0026quot;國立成功大學\u0026quot;, \u0026quot;國立交通大學\u0026quot;, \u0026quot;國立臺灣科技大學\u0026quot;, \u0026quot;國立陽明大學\u0026quot;, \u0026quot;國立臺灣師範大學\u0026quot;, \u0026quot;臺北醫學大學\u0026quot;, \u0026quot;國立中山大學\u0026quot;, \u0026quot;國立中央大學\u0026quot;, \u0026quot;國立臺北科技大學\u0026quot;, \u0026quot;長庚大學\u0026quot;, \u0026quot;國立政治大學\u0026quot;, \u0026quot;國立中興大學\u0026quot;, \u0026quot;高雄醫學大學\u0026quot;, \u0026quot;國立中正大學\u0026quot;) # remove unused column ranked_schools[\u0026quot;detailPage\u0026quot;] \u0026lt;- NULL ranked_schools } # pre-process ranked_schools ranked_schools \u0026lt;- ranked_schools_process(ranked_schools) 整理退學資料：","title":"為什麼我不做資料分析師"},{"content":"新的一年，新的網站。\n一直以來都是用臉書在記錄我的一些心情雜談、長文、日記等，不過總覺得歸納起來不是很方便，要看過去的文章也是個問題。腦中一閃而過，想說身為一個資訊人，有個自己的網站也是挺不賴的。於是，聽著演算法老師嘮叨著紅黑樹怎麼插入，這網站就這麼誕生了。\n本來考慮用 Wordpress 配上任意免空，但實在是懶得去找一個 reliable 又不用錢的空間，也用不到 Wordpress 很多功能，就聽了曲線的建議，在 hugo 跟 hexo 間選了 hugo 架在 github 上。\n在 OS 期末考跟微處理機期末 Project、R 語言作業、編譯器作業跟托福的炎燒下，就不說太多了。關於我的部分，也就等 1/16 忙完營隊後再說吧。\n","permalink":"https://yagami.dev/posts/1_new_site/","summary":"新的一年，新的網站。\n一直以來都是用臉書在記錄我的一些心情雜談、長文、日記等，不過總覺得歸納起來不是很方便，要看過去的文章也是個問題。腦中一閃而過，想說身為一個資訊人，有個自己的網站也是挺不賴的。於是，聽著演算法老師嘮叨著紅黑樹怎麼插入，這網站就這麼誕生了。\n本來考慮用 Wordpress 配上任意免空，但實在是懶得去找一個 reliable 又不用錢的空間，也用不到 Wordpress 很多功能，就聽了曲線的建議，在 hugo 跟 hexo 間選了 hugo 架在 github 上。\n在 OS 期末考跟微處理機期末 Project、R 語言作業、編譯器作業跟托福的炎燒下，就不說太多了。關於我的部分，也就等 1/16 忙完營隊後再說吧。","title":"新網站"},{"content":"","permalink":"https://yagami.dev/search/","summary":"","title":"搜尋"},{"content":"","permalink":"https://yagami.dev/archives/","summary":"archives","title":"時間軸"}]